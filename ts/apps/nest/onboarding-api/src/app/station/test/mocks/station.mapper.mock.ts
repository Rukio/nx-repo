import {
  CareRequest,
  CareRequestType,
  RequestedServiceLine,
  StationRiskStratificationProtocolSearchParam,
  StationTimeWindowsAvailability,
  TimeWindowsAvailability,
} from '@*company-data-covered*/consumer-web-types';

export const STATION_RISK_STRATIFICATION_PROTOCOL_SEARCH_PARAM: StationRiskStratificationProtocolSearchParam =
  {
    dob: '2000-01-01',
    gender: 'male',
    keywords: 'face hurts',
    service_line_id: 1,
    market_id: 159,
    high_risk: true,
  };

export const CARE_REQUEST_MOCK = {
  requestType: CareRequestType.phone,
  marketId: 1,
  requesterId: 2,
  serviceLineId: 3,
  channelItemId: 4,
  bypassSreeningProtocol: true,
  channelItemSelectedWithOriginPhone: '+123456789',
  billingCityId: 5,
  billingStatus: 'Paid',
  placeOfService: 'Hospital',
  address: {
    streetAddress1: '1234 Elm Street',
    streetAddress2: 'Apt 5B',
    additionalDetails: 'Near the big tree',
    city: 'Springfield',
    state: 'SP',
    zip: '12345',
    latitude: 40.73061,
    longitude: -73.935242,
  },
  complaint: {
    symptoms: 'Headache',
  },
  patient: {
    id: 6,
    firstName: 'John',
    lastName: 'Doe',
    phone: '+1234567890',
    email: 'johndoe@example.com',
    dateOfBirth: '1990-01-01',
    gender: 'Male',
    className: 'VIP',
    eligibilityFileId: 7,
    eligiblePatientId: 8,
    patientId: 9,
  },
  requester: {
    id: 2,
    relationToPatient: 'Brother',
    firstName: 'James',
    lastName: 'Doe',
    phone: '+0987654321',
    dhPhone: '+1122334455',
    conversationId: 'CONV001',
    organizationName: 'HealthCare Inc.',
  },
  appointmentSlot: {
    id: 10,
    startTime: '2023-08-14T09:00:00Z',
    destroy: false,
  },
  assignmentDate: '2023-08-14T09:00:00Z',
  requestedServiceLine: RequestedServiceLine.acuteCare,
  priorityNote: 'Handle with care',
  channelItem: {
    id: 1,
    name: 'Testing',
  },
};

export const STATION_CARE_REQUEST_MOCK = {
  request_type: CareRequestType.phone,
  skip_geocode: true,
  market_id: 1,
  caller_id: 2,
  service_line_id: 3,
  channel_item_id: 4,
  bypass_screening_protocol: true,
  channel_item_selected_with_origin_phone: '+123456789',
  billing_city_id: 5,
  billing_status: 'Paid',
  place_of_service: 'Hospital',
  street_address_1: '1234 Elm Street',
  street_address_2: 'Apt 5B',
  additional_details: 'Near the big tree',
  city: 'Springfield',
  state: 'SP',
  zipcode: '12345',
  latitude: 40.73061,
  longitude: -73.935242,
  chief_complaint: 'Headache',
  patient_attributes: {
    id: 6,
    first_name: 'John',
    last_name: 'Doe',
    mobile_number: '+1234567890',
    patient_email: 'johndoe@example.com',
    dob: '1990-01-01',
    gender: 'Male',
    class_name: 'VIP',
    eligibility_file_id: 7,
    eligible_patient_id: 8,
    patient_id: 9,
  },
  caller_attributes: {
    id: 2,
    relationship_to_patient: 'Brother',
    first_name: 'James',
    last_name: 'Doe',
    origin_phone: '+0987654321',
    dh_phone: '+1122334455',
    contact_id: 'CONV001',
    organization_name: 'HealthCare Inc.',
  },
  appointment_slot_attributes: {
    id: 10,
    start_time: '2023-08-14T09:00:00Z',
    _destroy: false,
  },
  assignment_date: '2023-08-14T09:00:00Z',
  requested_service_line: RequestedServiceLine.acuteCare,
  priority_note: 'Handle with care',
};

export const CARE_REQUEST_RESPONSE_MOCK: CareRequest = {
  id: 1,
  marketId: 1,
  requestType: CareRequestType.phone,
  requesterId: 2,
  patientId: undefined,
  requestStatus: undefined,
  serviceLineId: 3,
  channelItemId: 4,
  billingCityId: 5,
  statsigCareRequestId: undefined,
  billingStatus: 'Paid',
  placeOfService: 'Hospital',
  requester: undefined,
  address: {
    city: 'Springfield',
    state: 'SP',
    zip: '12345',
    streetAddress1: '1234 Elm Street',
    streetAddress2: 'Apt 5B',
    additionalDetails: 'Near the big tree',
  },
  bypassRiskStratificationData: undefined,
  partnerReferral: undefined,
  patient: {
    id: 1,
    patientSafetyFlag: {
      id: 100,
      flagType: 'some_type',
      flagReason: 'some_reason',
    },
    address: {
      city: 'Springfield',
      state: 'SP',
      zip: '12345',
      streetAddress1: '1234 Elm Street',
      streetAddress2: 'Apt 5B',
      latitude: '40.73061',
      longitude: '-73.935242',
    },
  },
  channelItem: undefined,
  patientPreferredEta: undefined,
  complaint: { symptoms: 'Headache' },
  appointmentSlot: undefined,
  serviceLine: undefined,
  bypassSreeningProtocol: true,
  channelItemSelectedWithOriginPhone: '+123456789',
  riskAssessment: undefined,
  riskAssessmentScore: undefined,
  riskAssessmentWorstCaseScore: undefined,
  shiftTeamId: undefined,
  assignmentDate: '2023-08-14T09:00:00Z',
  assignmentStatus: undefined,
  market: undefined,
  requestedServiceLine: RequestedServiceLine.acuteCare,
  secondaryScreenings: [
    {
      id: 1,
      approvalStatus: 'approved',
      note: 'note',
      mustBeSeenToday: true,
      telepresentationEligible: true,
      provider: undefined,
    },
  ],
  etaRanges: [
    {
      careRequestId: 1,
      careRequestStatusId: 2,
      id: 3,
      userId: 4,
      startsAt: '2023-08-14T09:00:00Z',
      endsAt: '2023-08-14T09:00:00Z',
    },
  ],
  shiftTeam: {
    carId: 1,
    marketId: 159,
    startTime: '2023-08-14T09:00:00Z',
    endTime: '2023-08-14T09:00:00Z',
    car: {
      name: 'car',
      marketId: 159,
      phone: '+0987654321',
      secondaryScreeningPriority: true,
    },
  },
};

export const STATION_CARE_REQUEST_RESPONSE_MOCK = {
  ...STATION_CARE_REQUEST_MOCK,
  id: 1,
  patient: {
    id: 1,
    patient_safety_flag: {
      id: 100,
      flag_type: 'some_type',
      flag_reason: 'some_reason',
    },
  },
  secondary_screenings: [
    {
      id: 1,
      approval_status: 'approved',
      note: 'note',
      must_be_seen_today: true,
      telepresentation_eligible: true,
    },
  ],
  eta_ranges: [
    {
      care_request_id: 1,
      care_request_status_id: 2,
      id: 3,
      user_id: 4,
      starts_at: '2023-08-14T09:00:00Z',
      ends_at: '2023-08-14T09:00:00Z',
    },
  ],
  shift_team: {
    car_id: 1,
    market_id: 159,
    start_time: '2023-08-14T09:00:00Z',
    end_time: '2023-08-14T09:00:00Z',
    car: {
      name: 'car',
      market_id: 159,
      phone: '+0987654321',
      secondary_screening_priority: true,
    },
  },
};

export const STATION_TIME_WINDOWS_AVAILABILITIES_MOCK: StationTimeWindowsAvailability[] =
  [
    {
      service_date: '2023-08-02',
      available_time_windows: [
        {
          start: '2023-08-02T14:00:00Z',
          end: '2023-08-02T16:00:00Z',
          part_of_day: 'Afternoon',
          display_time_window: '2:00PM - 4:00PM',
          is_recommended: true,
        },
        {
          start: '2023-08-02T09:00:00Z',
          end: '2023-08-02T11:00:00Z',
          part_of_day: 'Morning',
          display_time_window: 'NOW - 11:00AM',
          is_recommended: false,
        },
        {
          start: '2023-08-02T20:00:00Z',
          end: '2023-08-02T22:00:00Z',
          part_of_day: 'Evening',
          display_time_window: '8:00PM - 10:00PM',
          is_recommended: false,
        },
      ],
      unavailable_time_windows: [
        {
          start: '2023-08-02T08:00:00Z',
          end: '2023-08-02T10:00:00Z',
          part_of_day: 'Morning',
          display_time_window: '08:00AM - 10:00PM',
        },
        {
          start: '2023-08-02T13:00:00Z',
          end: '2023-08-02T15:00:00Z',
          part_of_day: 'Afternoon',
          display_time_window: '01:00PM - 03:00PM',
        },
        {
          start: '2023-08-02T19:00:00Z',
          end: '2023-08-02T21:00:00Z',
          part_of_day: 'Evening',
          display_time_window: '7:00PM - 09:00PM',
        },
      ],
    },
  ];

export const TIME_WINDOWS_AVAILABILITIES_MOCK: TimeWindowsAvailability[] = [
  {
    serviceDate: '2023-08-02',
    availableTimeWindows: [
      {
        start: '2023-08-02T14:00:00Z',
        end: '2023-08-02T16:00:00Z',
        partOfDay: 'Afternoon',
        displayTimeWindow: '2:00PM - 4:00PM',
        isRecommended: true,
      },
      {
        start: '2023-08-02T09:00:00Z',
        end: '2023-08-02T11:00:00Z',
        partOfDay: 'Morning',
        displayTimeWindow: 'NOW - 11:00AM',
        isRecommended: false,
      },
      {
        start: '2023-08-02T20:00:00Z',
        end: '2023-08-02T22:00:00Z',
        partOfDay: 'Evening',
        displayTimeWindow: '8:00PM - 10:00PM',
        isRecommended: false,
      },
    ],
    unavailableTimeWindows: [
      {
        start: '2023-08-02T08:00:00Z',
        end: '2023-08-02T10:00:00Z',
        partOfDay: 'Morning',
        displayTimeWindow: '08:00AM - 10:00PM',
      },
      {
        start: '2023-08-02T13:00:00Z',
        end: '2023-08-02T15:00:00Z',
        partOfDay: 'Afternoon',
        displayTimeWindow: '01:00PM - 03:00PM',
      },
      {
        start: '2023-08-02T19:00:00Z',
        end: '2023-08-02T21:00:00Z',
        partOfDay: 'Evening',
        displayTimeWindow: '7:00PM - 09:00PM',
      },
    ],
  },
];
