/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IncompleteTasks
 */
export interface IncompleteTasks {
    /**
     * daily_and_onboarding represents the number of incomplete daily and
     * onboarding tasks.
     * @type {string}
     * @memberof IncompleteTasks
     */
    dailyAndOnboarding: string;
    /**
     * nurse_navigator represents the number of incomplete nurse navigator tasks.
     * @type {string}
     * @memberof IncompleteTasks
     */
    nurseNavigator: string;
    /**
     * t1 represents the number of incomplete T1 tasks.
     * @type {string}
     * @memberof IncompleteTasks
     */
    t1: string;
    /**
     * t2 represents the number of incomplete T2 tasks.
     * @type {string}
     * @memberof IncompleteTasks
     */
    t2: string;
}

/**
 * Check if a given object implements the IncompleteTasks interface.
 */
export function instanceOfIncompleteTasks(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dailyAndOnboarding" in value;
    isInstance = isInstance && "nurseNavigator" in value;
    isInstance = isInstance && "t1" in value;
    isInstance = isInstance && "t2" in value;

    return isInstance;
}

export function IncompleteTasksFromJSON(json: any): IncompleteTasks {
    return IncompleteTasksFromJSONTyped(json, false);
}

export function IncompleteTasksFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncompleteTasks {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dailyAndOnboarding': json['daily_and_onboarding'],
        'nurseNavigator': json['nurse_navigator'],
        't1': json['t1'],
        't2': json['t2'],
    };
}

export function IncompleteTasksToJSON(value?: IncompleteTasks | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'daily_and_onboarding': value.dailyAndOnboarding,
        'nurse_navigator': value.nurseNavigator,
        't1': value.t1,
        't2': value.t2,
    };
}

