/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateEpisodeRequest
 */
export interface CreateEpisodeRequest {
    /**
     * Required. patient_summary represent patient's summary.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    patientSummary: string;
    /**
     * Required. service_line_id represents the Service Line the new
     * episode will belong to.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    serviceLineId: string;
    /**
     * Required. care_phase_id represents the Care Phase the new Episode
     * will belong to.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    carePhaseId: string;
    /**
     * Required. market_id represents the Market the new Episode will
     * belong to.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    marketId: string;
    /**
     * Required. patient_id represents the Patient the new Episode
     * will belong to.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    patientId: string;
    /**
     * care_day represents the care day of the Episode.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    careDay?: string;
    /**
     * source represents the source of the Episode.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    source?: string;
    /**
     * primary_diagnosis represents the primary diagnosis of the Episode.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    primaryDiagnosis?: string;
    /**
     * payer represents the payer of the Episode.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    payer?: string;
    /**
     * doctors_primary_care represents the doctor's primary care of the Episode.
     * @type {string}
     * @memberof CreateEpisodeRequest
     */
    doctorsPrimaryCare?: string;
    /**
     * apply_template_ids represents an array of TaskTemplate ids that has been
     * applied to the episode to keep track of which tasks have already been
     * added to the Episode.
     * @type {Array<string>}
     * @memberof CreateEpisodeRequest
     */
    applyTemplateIds?: Array<string>;
}

/**
 * Check if a given object implements the CreateEpisodeRequest interface.
 */
export function instanceOfCreateEpisodeRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "patientSummary" in value;
    isInstance = isInstance && "serviceLineId" in value;
    isInstance = isInstance && "carePhaseId" in value;
    isInstance = isInstance && "marketId" in value;
    isInstance = isInstance && "patientId" in value;

    return isInstance;
}

export function CreateEpisodeRequestFromJSON(json: any): CreateEpisodeRequest {
    return CreateEpisodeRequestFromJSONTyped(json, false);
}

export function CreateEpisodeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEpisodeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'patientSummary': json['patient_summary'],
        'serviceLineId': json['service_line_id'],
        'carePhaseId': json['care_phase_id'],
        'marketId': json['market_id'],
        'patientId': json['patient_id'],
        'careDay': !exists(json, 'care_day') ? undefined : json['care_day'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'primaryDiagnosis': !exists(json, 'primary_diagnosis') ? undefined : json['primary_diagnosis'],
        'payer': !exists(json, 'payer') ? undefined : json['payer'],
        'doctorsPrimaryCare': !exists(json, 'doctors_primary_care') ? undefined : json['doctors_primary_care'],
        'applyTemplateIds': !exists(json, 'apply_template_ids') ? undefined : json['apply_template_ids'],
    };
}

export function CreateEpisodeRequestToJSON(value?: CreateEpisodeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'patient_summary': value.patientSummary,
        'service_line_id': value.serviceLineId,
        'care_phase_id': value.carePhaseId,
        'market_id': value.marketId,
        'patient_id': value.patientId,
        'care_day': value.careDay,
        'source': value.source,
        'primary_diagnosis': value.primaryDiagnosis,
        'payer': value.payer,
        'doctors_primary_care': value.doctorsPrimaryCare,
        'apply_template_ids': value.applyTemplateIds,
    };
}

