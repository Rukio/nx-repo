/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchUsersRequest
 */
export interface SearchUsersRequest {
    /**
     * search_term represents the text used to match with the user's information.
     * the supported fields to match so far are: email, first_name, and last_name.
     * @type {string}
     * @memberof SearchUsersRequest
     */
    searchTerm: string;
    /**
     * page represents the current page to paginate the response.
     * @type {string}
     * @memberof SearchUsersRequest
     */
    page?: string;
    /**
     * page_size represents the desired number of users we want to include in the
     * response.
     * @type {string}
     * @memberof SearchUsersRequest
     */
    pageSize?: string;
}

/**
 * Check if a given object implements the SearchUsersRequest interface.
 */
export function instanceOfSearchUsersRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "searchTerm" in value;

    return isInstance;
}

export function SearchUsersRequestFromJSON(json: any): SearchUsersRequest {
    return SearchUsersRequestFromJSONTyped(json, false);
}

export function SearchUsersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchUsersRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'searchTerm': json['search_term'],
        'page': !exists(json, 'page') ? undefined : json['page'],
        'pageSize': !exists(json, 'page_size') ? undefined : json['page_size'],
    };
}

export function SearchUsersRequestToJSON(value?: SearchUsersRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'search_term': value.searchTerm,
        'page': value.page,
        'page_size': value.pageSize,
    };
}

