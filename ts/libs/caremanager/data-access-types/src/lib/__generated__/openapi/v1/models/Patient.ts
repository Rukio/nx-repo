/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Patient
 */
export interface Patient {
    /**
     * id represents the unique identifier of the Patient.
     * @type {string}
     * @memberof Patient
     */
    id: string;
    /**
     * first_name represents the first name of the Patient.
     * @type {string}
     * @memberof Patient
     */
    firstName: string;
    /**
     * middle_name represents the middle name of the Patient.
     * @type {string}
     * @memberof Patient
     */
    middleName?: string;
    /**
     * last_name represents the last name of the Patient
     * @type {string}
     * @memberof Patient
     */
    lastName: string;
    /**
     * date_of_birth represents the date of birth of the Patient
     * @type {string}
     * @memberof Patient
     */
    dateOfBirth: string;
    /**
     * sex represents the sex of the Patient, male, female, other or unspecified.
     * @type {string}
     * @memberof Patient
     */
    sex: string;
    /**
     * phone_number represents the phone number of the Patient.
     * @type {string}
     * @memberof Patient
     */
    phoneNumber?: string;
    /**
     * athena_medical_record_number represents the unique identifier of the
     * Patient on the Athena db.
     * @type {string}
     * @memberof Patient
     */
    athenaMedicalRecordNumber?: string;
    /**
     * medical_power_of_attorney_details
     * @type {string}
     * @memberof Patient
     */
    medicalPowerOfAttorneyDetails?: string;
    /**
     * payer
     * @type {string}
     * @memberof Patient
     */
    payer?: string;
    /**
     * preferred_pharmacy_details represents the prefered pharmacy of the Patient.
     * @type {string}
     * @memberof Patient
     */
    preferredPharmacyDetails?: string;
    /**
     * doctor_details represents the details of the PatientÂ´s doctor, like name,
     * phone number or any other necessary details.
     * @type {string}
     * @memberof Patient
     */
    doctorDetails?: string;
    /**
     * referrer
     * @type {string}
     * @memberof Patient
     */
    referrer?: string;
    /**
     * address_street represents the main street details of the main address of
     * the Patient.
     * @type {string}
     * @memberof Patient
     */
    addressStreet?: string;
    /**
     * address_street_2 represents the extra street details of the main address of
     * the Patient.
     * @type {string}
     * @memberof Patient
     */
    addressStreet2?: string;
    /**
     * address_city represents the name of the city of the main address of the
     * Patient.
     * @type {string}
     * @memberof Patient
     */
    addressCity?: string;
    /**
     * address_state represents the name of the state of the main address of the
     * Patient.
     * @type {string}
     * @memberof Patient
     */
    addressState?: string;
    /**
     * address_zipcode represents the zipcode number of the main address of the
     * Patient.
     * @type {string}
     * @memberof Patient
     */
    addressZipcode?: string;
    /**
     * address_notes represents any extra note or comments related to the main
     * address of the Patient.
     * @type {string}
     * @memberof Patient
     */
    addressNotes?: string;
    /**
     * created_at represents the date and time when the Patient was created.
     * @type {string}
     * @memberof Patient
     */
    createdAt?: string;
    /**
     * updated_at represents the date and time when the Patient was last updated.
     * @type {string}
     * @memberof Patient
     */
    updatedAt?: string;
    /**
     * athena_id represents the unique identifier of the
     * Patient on the Athena db. This is the same as athena_medical_record_number.
     * This field is just a domain translation for such number.
     * @type {string}
     * @memberof Patient
     */
    athenaId?: string;
}

/**
 * Check if a given object implements the Patient interface.
 */
export function instanceOfPatient(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "dateOfBirth" in value;
    isInstance = isInstance && "sex" in value;

    return isInstance;
}

export function PatientFromJSON(json: any): Patient {
    return PatientFromJSONTyped(json, false);
}

export function PatientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Patient {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['first_name'],
        'middleName': !exists(json, 'middle_name') ? undefined : json['middle_name'],
        'lastName': json['last_name'],
        'dateOfBirth': json['date_of_birth'],
        'sex': json['sex'],
        'phoneNumber': !exists(json, 'phone_number') ? undefined : json['phone_number'],
        'athenaMedicalRecordNumber': !exists(json, 'athena_medical_record_number') ? undefined : json['athena_medical_record_number'],
        'medicalPowerOfAttorneyDetails': !exists(json, 'medical_power_of_attorney_details') ? undefined : json['medical_power_of_attorney_details'],
        'payer': !exists(json, 'payer') ? undefined : json['payer'],
        'preferredPharmacyDetails': !exists(json, 'preferred_pharmacy_details') ? undefined : json['preferred_pharmacy_details'],
        'doctorDetails': !exists(json, 'doctor_details') ? undefined : json['doctor_details'],
        'referrer': !exists(json, 'referrer') ? undefined : json['referrer'],
        'addressStreet': !exists(json, 'address_street') ? undefined : json['address_street'],
        'addressStreet2': !exists(json, 'address_street_2') ? undefined : json['address_street_2'],
        'addressCity': !exists(json, 'address_city') ? undefined : json['address_city'],
        'addressState': !exists(json, 'address_state') ? undefined : json['address_state'],
        'addressZipcode': !exists(json, 'address_zipcode') ? undefined : json['address_zipcode'],
        'addressNotes': !exists(json, 'address_notes') ? undefined : json['address_notes'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'athenaId': !exists(json, 'athena_id') ? undefined : json['athena_id'],
    };
}

export function PatientToJSON(value?: Patient | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'first_name': value.firstName,
        'middle_name': value.middleName,
        'last_name': value.lastName,
        'date_of_birth': value.dateOfBirth,
        'sex': value.sex,
        'phone_number': value.phoneNumber,
        'athena_medical_record_number': value.athenaMedicalRecordNumber,
        'medical_power_of_attorney_details': value.medicalPowerOfAttorneyDetails,
        'payer': value.payer,
        'preferred_pharmacy_details': value.preferredPharmacyDetails,
        'doctor_details': value.doctorDetails,
        'referrer': value.referrer,
        'address_street': value.addressStreet,
        'address_street_2': value.addressStreet2,
        'address_city': value.addressCity,
        'address_state': value.addressState,
        'address_zipcode': value.addressZipcode,
        'address_notes': value.addressNotes,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'athena_id': value.athenaId,
    };
}

