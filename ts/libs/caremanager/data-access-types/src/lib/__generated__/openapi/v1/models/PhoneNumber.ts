/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PhoneNumberType } from './PhoneNumberType';
import {
    PhoneNumberTypeFromJSON,
    PhoneNumberTypeFromJSONTyped,
    PhoneNumberTypeToJSON,
} from './PhoneNumberType';

/**
 * 
 * @export
 * @interface PhoneNumber
 */
export interface PhoneNumber {
    /**
     * 
     * @type {PhoneNumberType}
     * @memberof PhoneNumber
     */
    phoneNumberType?: PhoneNumberType;
    /**
     * 
     * @type {number}
     * @memberof PhoneNumber
     */
    countryCode?: number;
    /**
     * 
     * @type {string}
     * @memberof PhoneNumber
     */
    phoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof PhoneNumber
     */
    extension?: string;
}

/**
 * Check if a given object implements the PhoneNumber interface.
 */
export function instanceOfPhoneNumber(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PhoneNumberFromJSON(json: any): PhoneNumber {
    return PhoneNumberFromJSONTyped(json, false);
}

export function PhoneNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhoneNumber {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'phoneNumberType': !exists(json, 'phone_number_type') ? undefined : PhoneNumberTypeFromJSON(json['phone_number_type']),
        'countryCode': !exists(json, 'country_code') ? undefined : json['country_code'],
        'phoneNumber': !exists(json, 'phone_number') ? undefined : json['phone_number'],
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
    };
}

export function PhoneNumberToJSON(value?: PhoneNumber | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'phone_number_type': PhoneNumberTypeToJSON(value.phoneNumberType),
        'country_code': value.countryCode,
        'phone_number': value.phoneNumber,
        'extension': value.extension,
    };
}

