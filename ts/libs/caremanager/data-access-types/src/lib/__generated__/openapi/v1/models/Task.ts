/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Task
 */
export interface Task {
    /**
     * id represents the unique identifier of the Task.
     * @type {string}
     * @memberof Task
     */
    id: string;
    /**
     * task  represents the text description or content of the Task.
     * @type {string}
     * @memberof Task
     */
    task: string;
    /**
     * task_type represents the type of the Task, like Daily, Provider, etc.
     * @type {string}
     * @memberof Task
     */
    taskType: string;
    /**
     * taskable_type represents the name of the model of the parent of the Task.
     * @type {string}
     * @memberof Task
     */
    taskableType: string;
    /**
     * taskable_id represents the id of the parent of the Task.
     * @type {string}
     * @memberof Task
     */
    taskableId: string;
    /**
     * status represents the state of the Task, whether it is completed or in any
     * other state.
     * @type {string}
     * @memberof Task
     */
    status: string;
    /**
     * 
     * @type {User}
     * @memberof Task
     */
    createdBy?: User;
    /**
     * 
     * @type {User}
     * @memberof Task
     */
    lastUpdatedBy?: User;
    /**
     * created_at represents the date and time when the Task was created.
     * @type {string}
     * @memberof Task
     */
    createdAt?: string;
    /**
     * updated_at represents the date and time when the Task was last updated.
     * @type {string}
     * @memberof Task
     */
    updatedAt?: string;
    /**
     * completed_by_user_id represents the ID of the User that marked the task
     * as completed.
     * @type {string}
     * @memberof Task
     */
    completedByUserId?: string;
}

/**
 * Check if a given object implements the Task interface.
 */
export function instanceOfTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "task" in value;
    isInstance = isInstance && "taskType" in value;
    isInstance = isInstance && "taskableType" in value;
    isInstance = isInstance && "taskableId" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function TaskFromJSON(json: any): Task {
    return TaskFromJSONTyped(json, false);
}

export function TaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Task {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'task': json['task'],
        'taskType': json['task_type'],
        'taskableType': json['taskable_type'],
        'taskableId': json['taskable_id'],
        'status': json['status'],
        'createdBy': !exists(json, 'created_by') ? undefined : UserFromJSON(json['created_by']),
        'lastUpdatedBy': !exists(json, 'last_updated_by') ? undefined : UserFromJSON(json['last_updated_by']),
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'completedByUserId': !exists(json, 'completed_by_user_id') ? undefined : json['completed_by_user_id'],
    };
}

export function TaskToJSON(value?: Task | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'task': value.task,
        'task_type': value.taskType,
        'taskable_type': value.taskableType,
        'taskable_id': value.taskableId,
        'status': value.status,
        'created_by': UserToJSON(value.createdBy),
        'last_updated_by': UserToJSON(value.lastUpdatedBy),
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'completed_by_user_id': value.completedByUserId,
    };
}

