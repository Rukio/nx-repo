/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CareManagerServiceUpdateInsuranceRequest
 */
export interface CareManagerServiceUpdateInsuranceRequest {
    /**
     * name represents the name of the Insurance.
     * @type {string}
     * @memberof CareManagerServiceUpdateInsuranceRequest
     */
    name?: string;
    /**
     * member_id represents the external member_id value of the Insurance, most
     * likely managed by each insurance company.
     * @type {string}
     * @memberof CareManagerServiceUpdateInsuranceRequest
     */
    memberId?: string;
}

/**
 * Check if a given object implements the CareManagerServiceUpdateInsuranceRequest interface.
 */
export function instanceOfCareManagerServiceUpdateInsuranceRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CareManagerServiceUpdateInsuranceRequestFromJSON(json: any): CareManagerServiceUpdateInsuranceRequest {
    return CareManagerServiceUpdateInsuranceRequestFromJSONTyped(json, false);
}

export function CareManagerServiceUpdateInsuranceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CareManagerServiceUpdateInsuranceRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'memberId': !exists(json, 'member_id') ? undefined : json['member_id'],
    };
}

export function CareManagerServiceUpdateInsuranceRequestToJSON(value?: CareManagerServiceUpdateInsuranceRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'member_id': value.memberId,
    };
}

