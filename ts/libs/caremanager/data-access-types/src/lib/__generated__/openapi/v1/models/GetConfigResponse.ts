/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CarePhase } from './CarePhase';
import {
    CarePhaseFromJSON,
    CarePhaseFromJSONTyped,
    CarePhaseToJSON,
} from './CarePhase';
import type { Market } from './Market';
import {
    MarketFromJSON,
    MarketFromJSONTyped,
    MarketToJSON,
} from './Market';
import type { ServiceLine } from './ServiceLine';
import {
    ServiceLineFromJSON,
    ServiceLineFromJSONTyped,
    ServiceLineToJSON,
} from './ServiceLine';

/**
 * 
 * @export
 * @interface GetConfigResponse
 */
export interface GetConfigResponse {
    /**
     * markets represents the collection of Markets that the authenticated User
     * has permissions to see, create and update resources.
     * @type {Array<Market>}
     * @memberof GetConfigResponse
     */
    markets: Array<Market>;
    /**
     * service_lines represents the collection of Service Lines that exist on the
     * platform.
     * @type {Array<ServiceLine>}
     * @memberof GetConfigResponse
     */
    serviceLines: Array<ServiceLine>;
    /**
     * care_phases represents the collection of Care Phases that exist on the
     * platform.
     * @type {Array<CarePhase>}
     * @memberof GetConfigResponse
     */
    carePhases: Array<CarePhase>;
}

/**
 * Check if a given object implements the GetConfigResponse interface.
 */
export function instanceOfGetConfigResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "markets" in value;
    isInstance = isInstance && "serviceLines" in value;
    isInstance = isInstance && "carePhases" in value;

    return isInstance;
}

export function GetConfigResponseFromJSON(json: any): GetConfigResponse {
    return GetConfigResponseFromJSONTyped(json, false);
}

export function GetConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetConfigResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'markets': ((json['markets'] as Array<any>).map(MarketFromJSON)),
        'serviceLines': ((json['service_lines'] as Array<any>).map(ServiceLineFromJSON)),
        'carePhases': ((json['care_phases'] as Array<any>).map(CarePhaseFromJSON)),
    };
}

export function GetConfigResponseToJSON(value?: GetConfigResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'markets': ((value.markets as Array<any>).map(MarketToJSON)),
        'service_lines': ((value.serviceLines as Array<any>).map(ServiceLineToJSON)),
        'care_phases': ((value.carePhases as Array<any>).map(CarePhaseToJSON)),
    };
}

