/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UnableToScheduleReason } from './UnableToScheduleReason';
import {
    UnableToScheduleReasonFromJSON,
    UnableToScheduleReasonFromJSONTyped,
    UnableToScheduleReasonToJSON,
} from './UnableToScheduleReason';

/**
 * 
 * @export
 * @interface CanScheduleVisitResponse
 */
export interface CanScheduleVisitResponse {
    /**
     * can_schedule_visit signals if the visit can be scheduled.
     * @type {boolean}
     * @memberof CanScheduleVisitResponse
     */
    canScheduleVisit: boolean;
    /**
     * 
     * @type {UnableToScheduleReason}
     * @memberof CanScheduleVisitResponse
     */
    reason?: UnableToScheduleReason;
}

/**
 * Check if a given object implements the CanScheduleVisitResponse interface.
 */
export function instanceOfCanScheduleVisitResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "canScheduleVisit" in value;

    return isInstance;
}

export function CanScheduleVisitResponseFromJSON(json: any): CanScheduleVisitResponse {
    return CanScheduleVisitResponseFromJSONTyped(json, false);
}

export function CanScheduleVisitResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CanScheduleVisitResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'canScheduleVisit': json['can_schedule_visit'],
        'reason': !exists(json, 'reason') ? undefined : UnableToScheduleReasonFromJSON(json['reason']),
    };
}

export function CanScheduleVisitResponseToJSON(value?: CanScheduleVisitResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'can_schedule_visit': value.canScheduleVisit,
        'reason': UnableToScheduleReasonToJSON(value.reason),
    };
}

