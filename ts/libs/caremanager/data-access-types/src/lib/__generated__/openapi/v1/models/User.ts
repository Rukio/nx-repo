/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * id represents the unique identifier of the User.
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     * first_name represents the first name of the User.
     * @type {string}
     * @memberof User
     */
    firstName: string;
    /**
     * last_name represents the last name of the User.
     * @type {string}
     * @memberof User
     */
    lastName: string;
    /**
     * email represents the email address of the User.
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * job_title represents the job title of the User.
     * @type {string}
     * @memberof User
     */
    jobTitle?: string;
    /**
     * avatar_url represents the avatar url of the User.
     * @type {string}
     * @memberof User
     */
    avatarUrl?: string;
    /**
     * phone_number represents the phone number of the User.
     * @type {string}
     * @memberof User
     */
    phoneNumber?: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'email': json['email'],
        'jobTitle': !exists(json, 'job_title') ? undefined : json['job_title'],
        'avatarUrl': !exists(json, 'avatar_url') ? undefined : json['avatar_url'],
        'phoneNumber': !exists(json, 'phone_number') ? undefined : json['phone_number'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'first_name': value.firstName,
        'last_name': value.lastName,
        'email': value.email,
        'job_title': value.jobTitle,
        'avatar_url': value.avatarUrl,
        'phone_number': value.phoneNumber,
    };
}

