/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScheduleDay } from './ScheduleDay';
import {
    ScheduleDayFromJSON,
    ScheduleDayFromJSONTyped,
    ScheduleDayToJSON,
} from './ScheduleDay';

/**
 * 
 * @export
 * @interface Market
 */
export interface Market {
    /**
     * id represents the unique identifier of the Market.
     * @type {string}
     * @memberof Market
     */
    id: string;
    /**
     * name represents the name of the Market.
     * @type {string}
     * @memberof Market
     */
    name: string;
    /**
     * short_name represents the short version of the name of the Market.
     * @type {string}
     * @memberof Market
     */
    shortName: string;
    /**
     * tz_name represents the IANA timezone name of the Market location.
     * @type {string}
     * @memberof Market
     */
    tzName: string;
    /**
     * schedule_days represents the open and close times for each day
     * of the week.
     * @type {Array<ScheduleDay>}
     * @memberof Market
     */
    scheduleDays: Array<ScheduleDay>;
}

/**
 * Check if a given object implements the Market interface.
 */
export function instanceOfMarket(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "shortName" in value;
    isInstance = isInstance && "tzName" in value;
    isInstance = isInstance && "scheduleDays" in value;

    return isInstance;
}

export function MarketFromJSON(json: any): Market {
    return MarketFromJSONTyped(json, false);
}

export function MarketFromJSONTyped(json: any, ignoreDiscriminator: boolean): Market {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'shortName': json['short_name'],
        'tzName': json['tz_name'],
        'scheduleDays': ((json['schedule_days'] as Array<any>).map(ScheduleDayFromJSON)),
    };
}

export function MarketToJSON(value?: Market | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'short_name': value.shortName,
        'tz_name': value.tzName,
        'schedule_days': ((value.scheduleDays as Array<any>).map(ScheduleDayToJSON)),
    };
}

