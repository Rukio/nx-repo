/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StationPatientListElement
 */
export interface StationPatientListElement {
    /**
     * id is the unique numeric identifier for a Station's CareRequest
     * @type {string}
     * @memberof StationPatientListElement
     */
    id: string;
    /**
     * first_name is a string representing the first name of the patient.
     * @type {string}
     * @memberof StationPatientListElement
     */
    firstName?: string;
    /**
     * last_name is a string representing the last name of the patient.
     * @type {string}
     * @memberof StationPatientListElement
     */
    lastName?: string;
    /**
     * ehr_id represents the electronic health record associated with the patient.
     * @type {string}
     * @memberof StationPatientListElement
     */
    ehrId: string;
    /**
     * date_of_birth is the date the patient was born at.
     * @type {string}
     * @memberof StationPatientListElement
     */
    dateOfBirth: string;
    /**
     * sex represents the sex of the patient.
     * @type {string}
     * @memberof StationPatientListElement
     */
    sex?: string;
    /**
     * insurance_name represents the name of the insurance that the patient has.
     * @type {string}
     * @memberof StationPatientListElement
     */
    insuranceName: string;
}

/**
 * Check if a given object implements the StationPatientListElement interface.
 */
export function instanceOfStationPatientListElement(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "ehrId" in value;
    isInstance = isInstance && "dateOfBirth" in value;
    isInstance = isInstance && "insuranceName" in value;

    return isInstance;
}

export function StationPatientListElementFromJSON(json: any): StationPatientListElement {
    return StationPatientListElementFromJSONTyped(json, false);
}

export function StationPatientListElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): StationPatientListElement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': !exists(json, 'first_name') ? undefined : json['first_name'],
        'lastName': !exists(json, 'last_name') ? undefined : json['last_name'],
        'ehrId': json['ehr_id'],
        'dateOfBirth': json['date_of_birth'],
        'sex': !exists(json, 'sex') ? undefined : json['sex'],
        'insuranceName': json['insurance_name'],
    };
}

export function StationPatientListElementToJSON(value?: StationPatientListElement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'first_name': value.firstName,
        'last_name': value.lastName,
        'ehr_id': value.ehrId,
        'date_of_birth': value.dateOfBirth,
        'sex': value.sex,
        'insurance_name': value.insuranceName,
    };
}

