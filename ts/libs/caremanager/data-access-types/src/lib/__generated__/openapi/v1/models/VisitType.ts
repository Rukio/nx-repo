/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VisitType
 */
export interface VisitType {
    /**
     * id represents the unique identifier of the VisitType.
     * @type {string}
     * @memberof VisitType
     */
    id: string;
    /**
     * name represents the human readable name of the VisitType.
     * @type {string}
     * @memberof VisitType
     */
    name: string;
    /**
     * is_call_type represents a flag which states if the VisitType can be
     * used in calls.
     * @type {boolean}
     * @memberof VisitType
     */
    isCallType: boolean;
}

/**
 * Check if a given object implements the VisitType interface.
 */
export function instanceOfVisitType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "isCallType" in value;

    return isInstance;
}

export function VisitTypeFromJSON(json: any): VisitType {
    return VisitTypeFromJSONTyped(json, false);
}

export function VisitTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): VisitType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'isCallType': json['is_call_type'],
    };
}

export function VisitTypeToJSON(value?: VisitType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'is_call_type': value.isCallType,
    };
}

