/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CareManagerServiceUpdateVisitNoteRequest
 */
export interface CareManagerServiceUpdateVisitNoteRequest {
    /**
     * details is the string that represents the body of the Note.
     * @type {string}
     * @memberof CareManagerServiceUpdateVisitNoteRequest
     */
    details?: string;
    /**
     * pinned represents the state of the Note, whether it is featured or
     * not.
     * @type {boolean}
     * @memberof CareManagerServiceUpdateVisitNoteRequest
     */
    pinned?: boolean;
}

/**
 * Check if a given object implements the CareManagerServiceUpdateVisitNoteRequest interface.
 */
export function instanceOfCareManagerServiceUpdateVisitNoteRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CareManagerServiceUpdateVisitNoteRequestFromJSON(json: any): CareManagerServiceUpdateVisitNoteRequest {
    return CareManagerServiceUpdateVisitNoteRequestFromJSONTyped(json, false);
}

export function CareManagerServiceUpdateVisitNoteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CareManagerServiceUpdateVisitNoteRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'details': !exists(json, 'details') ? undefined : json['details'],
        'pinned': !exists(json, 'pinned') ? undefined : json['pinned'],
    };
}

export function CareManagerServiceUpdateVisitNoteRequestToJSON(value?: CareManagerServiceUpdateVisitNoteRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'details': value.details,
        'pinned': value.pinned,
    };
}

