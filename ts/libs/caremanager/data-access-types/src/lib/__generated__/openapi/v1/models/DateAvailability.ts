/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UnableToScheduleReason } from './UnableToScheduleReason';
import {
    UnableToScheduleReasonFromJSON,
    UnableToScheduleReasonFromJSONTyped,
    UnableToScheduleReasonToJSON,
} from './UnableToScheduleReason';

/**
 * 
 * @export
 * @interface DateAvailability
 */
export interface DateAvailability {
    /**
     * date represents the specific date for fetching the availability
     * in the format MM-DD-YYYY.
     * @type {string}
     * @memberof DateAvailability
     */
    date?: string;
    /**
     * is_available represents a binary result if for
     * the given date there is an available slot or not
     * @type {boolean}
     * @memberof DateAvailability
     */
    isAvailable?: boolean;
    /**
     * 
     * @type {UnableToScheduleReason}
     * @memberof DateAvailability
     */
    reason?: UnableToScheduleReason;
}

/**
 * Check if a given object implements the DateAvailability interface.
 */
export function instanceOfDateAvailability(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DateAvailabilityFromJSON(json: any): DateAvailability {
    return DateAvailabilityFromJSONTyped(json, false);
}

export function DateAvailabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateAvailability {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': !exists(json, 'date') ? undefined : json['date'],
        'isAvailable': !exists(json, 'is_available') ? undefined : json['is_available'],
        'reason': !exists(json, 'reason') ? undefined : UnableToScheduleReasonFromJSON(json['reason']),
    };
}

export function DateAvailabilityToJSON(value?: DateAvailability | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': value.date,
        'is_available': value.isAvailable,
        'reason': UnableToScheduleReasonToJSON(value.reason),
    };
}

