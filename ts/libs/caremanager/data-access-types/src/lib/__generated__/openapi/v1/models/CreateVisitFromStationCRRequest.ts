/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreatePatientFromStationCRRequest } from './CreatePatientFromStationCRRequest';
import {
    CreatePatientFromStationCRRequestFromJSON,
    CreatePatientFromStationCRRequestFromJSONTyped,
    CreatePatientFromStationCRRequestToJSON,
} from './CreatePatientFromStationCRRequest';

/**
 * 
 * @export
 * @interface CreateVisitFromStationCRRequest
 */
export interface CreateVisitFromStationCRRequest {
    /**
     * 
     * @type {CreatePatientFromStationCRRequest}
     * @memberof CreateVisitFromStationCRRequest
     */
    patient?: CreatePatientFromStationCRRequest;
    /**
     * Required. care_request_id the unique identifier of the mapped care_request
     * in station.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    careRequestId: string;
    /**
     * service_line_id represents the ServiceLine ID the Episode belongs to.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    serviceLineId: string;
    /**
     * Required. market_id represents the Market the new Episode will
     * belong to.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    marketId: string;
    /**
     * patient_summary represents the patient's summary of the Episode.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    patientSummary?: string;
    /**
     * payer represents the payer of the Episode or Visit.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    payer?: string;
    /**
     * source represents the source of the Episode.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    source?: string;
    /**
     * source represents the source Care Request from which this one
     * is duplicated.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    sourceCareRequestId?: string;
    /**
     * created_by_user_id represents the user that created the care request.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    createdByUserId?: string;
    /**
     * status represents the current status of the care request. Most likely
     * "requested".
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    status: string;
    /**
     * status_updated_at represents the last datetime when the status was updated.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    statusUpdatedAt: string;
    /**
     * address_id represents the address id of the care request.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    addressId: string;
    /**
     * patient_availability_start represents the datetime the patient can start
     * receiving the care request team.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    patientAvailabilityStart: string;
    /**
     * patient_availability_end represents the datetime the patient can end
     * receiving the care request team.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    patientAvailabilityEnd: string;
    /**
     * car_name represents the name of the car assigned to the care request
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    carName: string;
    /**
     * provider_user_ids represents the ids of the shift team assigned to the care
     * request
     * @type {Array<string>}
     * @memberof CreateVisitFromStationCRRequest
     */
    providerUserIds: Array<string>;
    /**
     * original_care_request_id represents the original Care Request from which
     * this one was created.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    originalCareRequestId?: string;
    /**
     * car_id represents the ID of the car assigned to the Visit.
     * @type {string}
     * @memberof CreateVisitFromStationCRRequest
     */
    carId?: string;
}

/**
 * Check if a given object implements the CreateVisitFromStationCRRequest interface.
 */
export function instanceOfCreateVisitFromStationCRRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "careRequestId" in value;
    isInstance = isInstance && "serviceLineId" in value;
    isInstance = isInstance && "marketId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "statusUpdatedAt" in value;
    isInstance = isInstance && "addressId" in value;
    isInstance = isInstance && "patientAvailabilityStart" in value;
    isInstance = isInstance && "patientAvailabilityEnd" in value;
    isInstance = isInstance && "carName" in value;
    isInstance = isInstance && "providerUserIds" in value;

    return isInstance;
}

export function CreateVisitFromStationCRRequestFromJSON(json: any): CreateVisitFromStationCRRequest {
    return CreateVisitFromStationCRRequestFromJSONTyped(json, false);
}

export function CreateVisitFromStationCRRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateVisitFromStationCRRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'patient': !exists(json, 'patient') ? undefined : CreatePatientFromStationCRRequestFromJSON(json['patient']),
        'careRequestId': json['care_request_id'],
        'serviceLineId': json['service_line_id'],
        'marketId': json['market_id'],
        'patientSummary': !exists(json, 'patient_summary') ? undefined : json['patient_summary'],
        'payer': !exists(json, 'payer') ? undefined : json['payer'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'sourceCareRequestId': !exists(json, 'source_care_request_id') ? undefined : json['source_care_request_id'],
        'createdByUserId': !exists(json, 'created_by_user_id') ? undefined : json['created_by_user_id'],
        'status': json['status'],
        'statusUpdatedAt': json['status_updated_at'],
        'addressId': json['address_id'],
        'patientAvailabilityStart': json['patient_availability_start'],
        'patientAvailabilityEnd': json['patient_availability_end'],
        'carName': json['car_name'],
        'providerUserIds': json['provider_user_ids'],
        'originalCareRequestId': !exists(json, 'original_care_request_id') ? undefined : json['original_care_request_id'],
        'carId': !exists(json, 'car_id') ? undefined : json['car_id'],
    };
}

export function CreateVisitFromStationCRRequestToJSON(value?: CreateVisitFromStationCRRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'patient': CreatePatientFromStationCRRequestToJSON(value.patient),
        'care_request_id': value.careRequestId,
        'service_line_id': value.serviceLineId,
        'market_id': value.marketId,
        'patient_summary': value.patientSummary,
        'payer': value.payer,
        'source': value.source,
        'source_care_request_id': value.sourceCareRequestId,
        'created_by_user_id': value.createdByUserId,
        'status': value.status,
        'status_updated_at': value.statusUpdatedAt,
        'address_id': value.addressId,
        'patient_availability_start': value.patientAvailabilityStart,
        'patient_availability_end': value.patientAvailabilityEnd,
        'car_name': value.carName,
        'provider_user_ids': value.providerUserIds,
        'original_care_request_id': value.originalCareRequestId,
        'car_id': value.carId,
    };
}

