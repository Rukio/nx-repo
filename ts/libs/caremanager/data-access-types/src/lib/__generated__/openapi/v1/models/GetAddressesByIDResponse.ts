/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CaremanagerAddress } from './CaremanagerAddress';
import {
    CaremanagerAddressFromJSON,
    CaremanagerAddressFromJSONTyped,
    CaremanagerAddressToJSON,
} from './CaremanagerAddress';

/**
 * 
 * @export
 * @interface GetAddressesByIDResponse
 */
export interface GetAddressesByIDResponse {
    /**
     * users represents the list of Address instances.
     * @type {Array<CaremanagerAddress>}
     * @memberof GetAddressesByIDResponse
     */
    addresses: Array<CaremanagerAddress>;
}

/**
 * Check if a given object implements the GetAddressesByIDResponse interface.
 */
export function instanceOfGetAddressesByIDResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "addresses" in value;

    return isInstance;
}

export function GetAddressesByIDResponseFromJSON(json: any): GetAddressesByIDResponse {
    return GetAddressesByIDResponseFromJSONTyped(json, false);
}

export function GetAddressesByIDResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAddressesByIDResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addresses': ((json['addresses'] as Array<any>).map(CaremanagerAddressFromJSON)),
    };
}

export function GetAddressesByIDResponseToJSON(value?: GetAddressesByIDResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addresses': ((value.addresses as Array<any>).map(CaremanagerAddressToJSON)),
    };
}

