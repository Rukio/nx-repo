/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VisitStatusGroup } from './VisitStatusGroup';
import {
    VisitStatusGroupFromJSON,
    VisitStatusGroupFromJSONTyped,
    VisitStatusGroupToJSON,
} from './VisitStatusGroup';

/**
 * 
 * @export
 * @interface VisitListElement
 */
export interface VisitListElement {
    /**
     * id represents the unique identifier of the Visit.
     * @type {string}
     * @memberof VisitListElement
     */
    id: string;
    /**
     * episode_id represents the unique identifier of the Episode the Visit
     * belongs to.
     * @type {string}
     * @memberof VisitListElement
     */
    episodeId: string;
    /**
     * 
     * @type {VisitStatusGroup}
     * @memberof VisitListElement
     */
    statusGroup?: VisitStatusGroup;
    /**
     * created_at represents the date and time when the Visit was created.
     * @type {string}
     * @memberof VisitListElement
     */
    createdAt: string;
    /**
     * updated_at represents the date and time when the Visit was last updated.
     * @type {string}
     * @memberof VisitListElement
     */
    updatedAt: string;
    /**
     * type represents the type of the Visit, like "acute", "high_acuity", etc.
     * @type {string}
     * @memberof VisitListElement
     */
    type?: string;
    /**
     * status represents the status of the Care Request at the moment the Visit
     * was created.
     * @type {string}
     * @memberof VisitListElement
     */
    status?: string;
    /**
     * summary represents a summary of the Visit.
     * @type {string}
     * @memberof VisitListElement
     */
    summary?: string;
    /**
     * car_name represents the name of the car that was assigned to the Care
     * Request associated to the Visit.
     * @type {string}
     * @memberof VisitListElement
     */
    carName?: string;
    /**
     * provider_user_ids represents an array of provider (User) ids that were
     * assigned to the Care Request associated to the Visit.
     * @type {Array<string>}
     * @memberof VisitListElement
     */
    providerUserIds?: Array<string>;
    /**
     * type_id represents the id of the VisitType that the Visit belongs to.
     * @type {string}
     * @memberof VisitListElement
     */
    typeId?: string;
    /**
     * care_request_id represents the id of the Care Request that the Visit
     * originated from.
     * @type {string}
     * @memberof VisitListElement
     */
    careRequestId?: string;
    /**
     * created_by_user_id represents the ID of the User that created the Visit.
     * @type {string}
     * @memberof VisitListElement
     */
    createdByUserId?: string;
    /**
     * is_scheduling_in_process signals if a Visit is yet to be scheduled.
     * @type {boolean}
     * @memberof VisitListElement
     */
    isSchedulingInProcess?: boolean;
    /**
     * status_updated_at represents the last date with time this Visits's Status
     *  was updated.
     * @type {string}
     * @memberof VisitListElement
     */
    statusUpdatedAt?: string;
    /**
     * eta represents the estimated date with time of arrival for this Visit.
     * @type {string}
     * @memberof VisitListElement
     */
    eta?: string;
}

/**
 * Check if a given object implements the VisitListElement interface.
 */
export function instanceOfVisitListElement(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "episodeId" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function VisitListElementFromJSON(json: any): VisitListElement {
    return VisitListElementFromJSONTyped(json, false);
}

export function VisitListElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): VisitListElement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'episodeId': json['episode_id'],
        'statusGroup': !exists(json, 'status_group') ? undefined : VisitStatusGroupFromJSON(json['status_group']),
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'summary': !exists(json, 'summary') ? undefined : json['summary'],
        'carName': !exists(json, 'car_name') ? undefined : json['car_name'],
        'providerUserIds': !exists(json, 'provider_user_ids') ? undefined : json['provider_user_ids'],
        'typeId': !exists(json, 'type_id') ? undefined : json['type_id'],
        'careRequestId': !exists(json, 'care_request_id') ? undefined : json['care_request_id'],
        'createdByUserId': !exists(json, 'created_by_user_id') ? undefined : json['created_by_user_id'],
        'isSchedulingInProcess': !exists(json, 'is_scheduling_in_process') ? undefined : json['is_scheduling_in_process'],
        'statusUpdatedAt': !exists(json, 'status_updated_at') ? undefined : json['status_updated_at'],
        'eta': !exists(json, 'eta') ? undefined : json['eta'],
    };
}

export function VisitListElementToJSON(value?: VisitListElement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'episode_id': value.episodeId,
        'status_group': VisitStatusGroupToJSON(value.statusGroup),
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'type': value.type,
        'status': value.status,
        'summary': value.summary,
        'car_name': value.carName,
        'provider_user_ids': value.providerUserIds,
        'type_id': value.typeId,
        'care_request_id': value.careRequestId,
        'created_by_user_id': value.createdByUserId,
        'is_scheduling_in_process': value.isSchedulingInProcess,
        'status_updated_at': value.statusUpdatedAt,
        'eta': value.eta,
    };
}

