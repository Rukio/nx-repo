/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CarePhase
 */
export interface CarePhase {
    /**
     * id represents the unique identifier of the Care Phase.
     * @type {string}
     * @memberof CarePhase
     */
    id: string;
    /**
     * name represents the name of the Care Phase.
     * @type {string}
     * @memberof CarePhase
     */
    name: string;
    /**
     * phase_type represents the type of the Care Phase, may be "active" or
     * "inactive".
     * @type {string}
     * @memberof CarePhase
     */
    phaseType: string;
}

/**
 * Check if a given object implements the CarePhase interface.
 */
export function instanceOfCarePhase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "phaseType" in value;

    return isInstance;
}

export function CarePhaseFromJSON(json: any): CarePhase {
    return CarePhaseFromJSONTyped(json, false);
}

export function CarePhaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CarePhase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'phaseType': json['phase_type'],
    };
}

export function CarePhaseToJSON(value?: CarePhase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'phase_type': value.phaseType,
    };
}

