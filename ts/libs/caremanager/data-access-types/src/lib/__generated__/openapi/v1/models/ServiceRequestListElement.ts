/* tslint:disable */
/* eslint-disable */
/**
 * caremanager/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServiceRequest } from './ServiceRequest';
import {
    ServiceRequestFromJSON,
    ServiceRequestFromJSONTyped,
    ServiceRequestToJSON,
} from './ServiceRequest';
import type { StationCareRequestListElement } from './StationCareRequestListElement';
import {
    StationCareRequestListElementFromJSON,
    StationCareRequestListElementFromJSONTyped,
    StationCareRequestListElementToJSON,
} from './StationCareRequestListElement';
import type { StationPatientListElement } from './StationPatientListElement';
import {
    StationPatientListElementFromJSON,
    StationPatientListElementFromJSONTyped,
    StationPatientListElementToJSON,
} from './StationPatientListElement';

/**
 * 
 * @export
 * @interface ServiceRequestListElement
 */
export interface ServiceRequestListElement {
    /**
     * 
     * @type {ServiceRequest}
     * @memberof ServiceRequestListElement
     */
    serviceRequest?: ServiceRequest;
    /**
     * 
     * @type {StationPatientListElement}
     * @memberof ServiceRequestListElement
     */
    stationPatient?: StationPatientListElement;
    /**
     * 
     * @type {StationCareRequestListElement}
     * @memberof ServiceRequestListElement
     */
    stationCareRequest?: StationCareRequestListElement;
    /**
     * notes_count represents the total amount of notes that the ServiceRequest
     * has.
     * @type {string}
     * @memberof ServiceRequestListElement
     */
    notesCount: string;
}

/**
 * Check if a given object implements the ServiceRequestListElement interface.
 */
export function instanceOfServiceRequestListElement(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "notesCount" in value;

    return isInstance;
}

export function ServiceRequestListElementFromJSON(json: any): ServiceRequestListElement {
    return ServiceRequestListElementFromJSONTyped(json, false);
}

export function ServiceRequestListElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceRequestListElement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'serviceRequest': !exists(json, 'service_request') ? undefined : ServiceRequestFromJSON(json['service_request']),
        'stationPatient': !exists(json, 'station_patient') ? undefined : StationPatientListElementFromJSON(json['station_patient']),
        'stationCareRequest': !exists(json, 'station_care_request') ? undefined : StationCareRequestListElementFromJSON(json['station_care_request']),
        'notesCount': json['notes_count'],
    };
}

export function ServiceRequestListElementToJSON(value?: ServiceRequestListElement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'service_request': ServiceRequestToJSON(value.serviceRequest),
        'station_patient': StationPatientListElementToJSON(value.stationPatient),
        'station_care_request': StationCareRequestListElementToJSON(value.stationCareRequest),
        'notes_count': value.notesCount,
    };
}

